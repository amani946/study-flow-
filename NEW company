// company.dart
import 'package:flutter/material.dart';
import 'package:flutter/gestures.dart';

void main() {
  runApp(StudyFlowApp());
}

class StudyFlowApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Study Flow',
      theme: ThemeData(
        primarySwatch: Colors.purple,
        visualDensity: VisualDensity.adaptivePlatformDensity,
      ),
      home: MainAppScreen(),
    );
  }
}

class MainAppScreen extends StatefulWidget {
  @override
  _MainAppScreenState createState() => _MainAppScreenState();
}

class _MainAppScreenState extends State<MainAppScreen> {
  int _currentIndex = 0;
  final List<Widget> _screens = [
    HomeScreen(),
    ChatScreen(),
    ProfileScreen(),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: _screens[_currentIndex],
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: _currentIndex,
        onTap: (index) => setState(() => _currentIndex = index),
        type: BottomNavigationBarType.fixed,
        selectedItemColor: Colors.purple[800],
        unselectedItemColor: Colors.grey,
        backgroundColor: Colors.white,
        items: [
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            label: 'Home',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.chat),
            label: 'Chat',
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person),
            label: 'Profile',
          ),
        ],
      ),
    );
  }
}

class HomeScreen extends StatefulWidget {
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  TextEditingController postController = TextEditingController();
  TextEditingController searchController = TextEditingController();
  TextEditingController commentController = TextEditingController();

  List<Map<String, dynamic>> posts = [
    {
      "username": "user1",
      "content": "This is a sample post with #StudyFlow.",
      "likes": 10,
      "comments": ["Great post!", "Nice!"],
      "isLiked": false,
      "isSaved": false,
    },
    {
      "username": "user2",
      "content": "Another post here. #StudyFlow",
      "likes": 5,
      "comments": ["Awesome!", "Well done!"],
      "isLiked": false,
      "isSaved": false,
    },
  ];

  void addPost() {
    String post = postController.text.trim();
    if (post.isNotEmpty) {
      setState(() {
        posts.insert(0, {
          "username": "You",
          "content": post,
          "likes": 0,
          "comments": [],
          "isLiked": false,
          "isSaved": false,
        });
      });
      postController.clear();
    }
  }

  void toggleLike(int index) {
    setState(() {
      posts[index]["isLiked"] = !posts[index]["isLiked"];
      if (posts[index]["isLiked"]) {
        posts[index]["likes"] += 1;
      } else {
        posts[index]["likes"] -= 1;
      }
    });
  }

  void toggleSave(int index) {
    setState(() {
      posts[index]["isSaved"] = !posts[index]["isSaved"];
    });
  }

  void addComment(int index, String comment) {
    setState(() {
      posts[index]["comments"].add(comment);
    });
    commentController.clear();
  }

  void navigateToHashtagPage(String hashtag) {
    Navigator.push(
      context,
      MaterialPageRoute(
        builder: (context) => HashtagPage(hashtag: hashtag, posts: posts),
      ),
    );
  }

  List<TextSpan> _parsePostContent(String content) {
    List<TextSpan> textSpans = [];
    List<String> words = content.split(" ");

    for (String word in words) {
      if (word.startsWith("#")) {
        textSpans.add(
          TextSpan(
            text: "$word ",
            style: TextStyle(
              color: Colors.blue,
              fontWeight: FontWeight.bold,
            ),
            recognizer: TapGestureRecognizer()
              ..onTap = () => navigateToHashtagPage(word),
          ),
        );
      } else {
        textSpans.add(
          TextSpan(
            text: "$word ",
            style: TextStyle(color: Colors.black),
          ),
        );
      }
    }

    return textSpans;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.purple[50],
      appBar: AppBar(
        title: Text('StudyFlow', style: TextStyle(color: Colors.purple[800])),
        backgroundColor: Colors.white,
        elevation: 0,
        actions: [
          IconButton(
            icon: Icon(Icons.search, color: Colors.purple[800]),
            onPressed: () {},
          ),
          IconButton(
            icon: Icon(Icons.notifications, color: Colors.purple[800]),
            onPressed: () {},
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          children: [
            // Create Post Card
            Card(
              elevation: 4,
              margin: EdgeInsets.all(16),
              shape: RoundedRectangleBorder(
                borderRadius: BorderRadius.circular(16),
              ),
              child: Padding(
                padding: EdgeInsets.all(16),
                child: Column(
                  children: [
                    Row(
                      children: [
                        CircleAvatar(
                          radius: 20,
                          backgroundColor: Colors.purple[200],
                          child: Icon(Icons.person, color: Colors.white),
                        ),
                        SizedBox(width: 12),
                        Expanded(
                          child: TextField(
                            controller: postController,
                            decoration: InputDecoration(
                              hintText: "What's on your mind?",
                              border: InputBorder.none,
                            ),
                          ),
                        ),
                      ],
                    ),
                    Divider(height: 24),
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                      children: [
                        TextButton.icon(
                          icon: Icon(Icons.photo, color: Colors.purple),
                          label: Text('Photo', style: TextStyle(color: Colors.purple)),
                          onPressed: () {},
                        ),
                        TextButton.icon(
                          icon: Icon(Icons.videocam, color: Colors.purple),
                          label: Text('Video', style: TextStyle(color: Colors.purple)),
                          onPressed: () {},
                        ),
                        TextButton.icon(
                          icon: Icon(Icons.tag, color: Colors.purple),
                          label: Text('Tag', style: TextStyle(color: Colors.purple)),
                          onPressed: () {},
                        ),
                      ],
                    ),
                    SizedBox(height: 8),
                    ElevatedButton(
                      onPressed: addPost,
                      child: Text('Post'),
                      style: ElevatedButton.styleFrom(
                        backgroundColor: Colors.purple[800],
                        shape: RoundedRectangleBorder(
                          borderRadius: BorderRadius.circular(12),
                        ),
                      ),
                    ),
                  ],
                ),
              ),
            ),

            // Posts List
            ListView.builder(
              shrinkWrap: true,
              physics: NeverScrollableScrollPhysics(),
              itemCount: posts.length,
              itemBuilder: (context, index) {
                return Card(
                  elevation: 4,
                  margin: EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(16),
                  ),
                  child: Padding(
                    padding: EdgeInsets.all(16),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        Row(
                          children: [
                            CircleAvatar(
                              radius: 20,
                              backgroundColor: Colors.purple[200],
                              child: Icon(Icons.person, color: Colors.white),
                            ),
                            SizedBox(width: 12),
                            Text(
                              posts[index]["username"],
                              style: TextStyle(
                                fontWeight: FontWeight.bold,
                                color: Colors.purple[800],
                              ),
                            ),
                            Spacer(),
                            Icon(Icons.more_vert, color: Colors.purple),
                          ],
                        ),
                        SizedBox(height: 12),
                        RichText(
                          text: TextSpan(
                            children: _parsePostContent(posts[index]["content"]),
                          ),
                        ),
                        SizedBox(height: 12),
                        Row(
                          children: [
                            IconButton(
                              icon: Icon(
                                posts[index]["isLiked"] 
                                  ? Icons.favorite 
                                  : Icons.favorite_border,
                                color: posts[index]["isLiked"] 
                                  ? Colors.red 
                                  : Colors.grey,
                              ),
                              onPressed: () => toggleLike(index),
                            ),
                            Text("${posts[index]["likes"]}"),
                            SizedBox(width: 16),
                            IconButton(
                              icon: Icon(Icons.comment, color: Colors.purple),
                              onPressed: () {},
                            ),
                            Text("${posts[index]["comments"].length}"),
                            Spacer(),
                            IconButton(
                              icon: Icon(
                                posts[index]["isSaved"] 
                                  ? Icons.bookmark 
                                  : Icons.bookmark_border,
                                color: posts[index]["isSaved"] 
                                  ? Colors.purple 
                                  : Colors.grey,
                              ),
                              onPressed: () => toggleSave(index),
                            ),
                          ],
                        ),
                        SizedBox(height: 8),
                        Padding(
                          padding: EdgeInsets.symmetric(horizontal: 8),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                "Comments:",
                                style: TextStyle(
                                  fontWeight: FontWeight.bold,
                                  color: Colors.purple[800],
                                ),
                              ),
                              ...posts[index]["comments"].map((comment) {
                                return Padding(
                                  padding: EdgeInsets.symmetric(vertical: 4),
                                  child: Text(comment),
                                );
                              }).toList(),
                              Row(
                                children: [
                                  Expanded(
                                    child: TextField(
                                      controller: commentController,
                                      decoration: InputDecoration(
                                        hintText: "Add a comment...",
                                        border: InputBorder.none,
                                      ),
                                      onSubmitted: (comment) {
                                        addComment(index, comment);
                                      },
                                    ),
                                  ),
                                  IconButton(
                                    icon: Icon(Icons.send, color: Colors.purple),
                                    onPressed: () {
                                      if (commentController.text.isNotEmpty) {
                                        addComment(index, commentController.text);
                                      }
                                    },
                                  ),
                                ],
                              ),
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                );
              },
            ),
          ],
        ),
      ),
    );
  }
}

class ChatScreen extends StatefulWidget {
  @override
  _ChatScreenState createState() => _ChatScreenState();
}

class _ChatScreenState extends State<ChatScreen> {
  TextEditingController chatController = TextEditingController();
  TextEditingController searchController = TextEditingController();

  List<Map<String, dynamic>> chatMessages = [
    {
      "sender": "Rema XXX",
      "message": "hello",
      "time": "7:33 AM",
      "isMe": false,
    },
    {
      "sender": "name XXX",
      "message": "hi, how are you?",
      "time": "7:33 AM",
      "isMe": false,
    },
    {
      "sender": "You",
      "message": "I'm good, thanks!",
      "time": "7:34 AM",
      "isMe": true,
    },
  ];

  List<String> friends = ["Friend 1", "Friend 2", "Friend 3", "Friend 4"];
  String selectedFriend = "";

  void sendMessage() {
    String message = chatController.text.trim();
    if (message.isNotEmpty) {
      setState(() {
        chatMessages.add({
          "sender": "You",
          "message": message,
          "time": "${DateTime.now().hour}:${DateTime.now().minute}",
          "isMe": true,
        });
      });
      chatController.clear();
    }
  }

  void selectFriend(String friend) {
    setState(() {
      selectedFriend = friend;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.purple[50],
      appBar: AppBar(
        title: Text('Messages', style: TextStyle(color: Colors.purple[800])),
        backgroundColor: Colors.white,
        elevation: 0,
        actions: [
          IconButton(
            icon: Icon(Icons.group_add, color: Colors.purple[800]),
            onPressed: () {},
          ),
        ],
      ),
      body: Column(
        children: [
          Padding(
            padding: EdgeInsets.all(16),
            child: TextField(
              controller: searchController,
              decoration: InputDecoration(
                prefixIcon: Icon(Icons.search, color: Colors.purple),
                hintText: 'Search messages',
                border: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(12),
                  borderSide: BorderSide(color: Colors.purple),
                ),
                focusedBorder: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(12),
                  borderSide: BorderSide(color: Colors.purple),
                ),
              ),
            ),
          ),
          Expanded(
            child: Container(
              decoration: BoxDecoration(
                color: Colors.white,
                borderRadius: BorderRadius.vertical(top: Radius.circular(16)),
              ),
              child: Column(
                children: [
                  if (selectedFriend.isEmpty)
                    Expanded(
                      child: ListView.builder(
                        itemCount: friends.length,
                        itemBuilder: (context, index) {
                          return ListTile(
                            leading: CircleAvatar(
                              backgroundColor: Colors.purple[100],
                              child: Icon(Icons.person, color: Colors.purple[800]),
                            ),
                            title: Text(friends[index]),
                            onTap: () => selectFriend(friends[index]),
                          );
                        },
                      ),
                    ),
                  if (selectedFriend.isNotEmpty)
                    Expanded(
                      child: Column(
                        children: [
                          Container(
                            padding: EdgeInsets.all(16),
                            decoration: BoxDecoration(
                              border: Border(
                                bottom: BorderSide(color: Colors.grey[200]!),
                              ),
                            ),
                            child: Row(
                              children: [
                                IconButton(
                                  icon: Icon(Icons.arrow_back),
                                  onPressed: () => selectFriend(""),
                                ),
                                CircleAvatar(
                                  backgroundColor: Colors.purple[100],
                                  child: Icon(Icons.person, color: Colors.purple[800]),
                                ),
                                SizedBox(width: 12),
                                Text(
                                  selectedFriend,
                                  style: TextStyle(
                                    fontWeight: FontWeight.bold,
                                    color: Colors.purple[800],
                                  ),
                                ),
                              ],
                            ),
                          ),
                          Expanded(
                            child: ListView.builder(
                              reverse: true,
                              itemCount: chatMessages.length,
                              itemBuilder: (context, index) {
                                final message = chatMessages[index];
                                return Align(
                                  alignment: message["isMe"] 
                                    ? Alignment.centerRight 
                                    : Alignment.centerLeft,
                                  child: Container(
                                    margin: EdgeInsets.symmetric(
                                      vertical: 4, 
                                      horizontal: 16,
                                    ),
                                    padding: EdgeInsets.symmetric(
                                      vertical: 8,
                                      horizontal: 12,
                                    ),
                                    decoration: BoxDecoration(
                                      color: message["isMe"]
                                          ? Colors.purple[800]
                                          : Colors.grey[200],
                                      borderRadius: BorderRadius.circular(12),
                                    ),
                                    child: Column(
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: [
                                        if (!message["isMe"])
                                          Text(
                                            message["sender"],
                                            style: TextStyle(
                                              color: Colors.purple[800],
                                              fontWeight: FontWeight.bold,
                                              fontSize: 12,
                                            ),
                                          ),
                                        Text(
                                          message["message"],
                                          style: TextStyle(
                                            color: message["isMe"] 
                                              ? Colors.white 
                                              : Colors.black,
                                          ),
                                        ),
                                        SizedBox(height: 4),
                                        Text(
                                          message["time"],
                                          style: TextStyle(
                                            color: message["isMe"]
                                                ? Colors.white70
                                                : Colors.grey,
                                            fontSize: 10,
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                );
                              },
                            ),
                          ),
                          Padding(
                            padding: EdgeInsets.all(8),
                            child: Row(
                              children: [
                                Expanded(
                                  child: TextField(
                                    controller: chatController,
                                    decoration: InputDecoration(
                                      hintText: 'Type a message...',
                                      border: OutlineInputBorder(
                                        borderRadius: BorderRadius.circular(24),
                                      ),
                                      contentPadding: EdgeInsets.symmetric(
                                        vertical: 12,
                                        horizontal: 16,
                                      ),
                                      focusedBorder: OutlineInputBorder(
                                        borderRadius: BorderRadius.circular(24),
                                        borderSide: BorderSide(color: Colors.purple),
                                      ),
                                    ),
                                  ),
                                ),
                                SizedBox(width: 8),
                                CircleAvatar(
                                  backgroundColor: Colors.purple[800],
                                  child: IconButton(
                                    icon: Icon(Icons.send, color: Colors.white),
                                    onPressed: sendMessage,
                                  ),
                                ),
                              ],
                            ),
                          ),
                        ],
                      ),
                    ),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }
}

class ProfileScreen extends StatefulWidget {
  @override
  _ProfileScreenState createState() => _ProfileScreenState();
}

class _ProfileScreenState extends State<ProfileScreen> {
  TextEditingController bioController = TextEditingController();
  TextEditingController socialMediaController = TextEditingController();
  TextEditingController companyDomainController = TextEditingController();
  String profilePhotoUrl = "";
  bool isEditing = false;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.purple[50],
      appBar: AppBar(
        title: Text('Profile', style: TextStyle(color: Colors.purple[800])),
        backgroundColor: Colors.white,
        elevation: 0,
        actions: [
          IconButton(
            icon: Icon(Icons.edit, color: Colors.purple[800]),
            onPressed: () {
              setState(() {
                isEditing = !isEditing;
              });
            },
          ),
        ],
      ),
      body: SingleChildScrollView(
        child: Column(
          children: [
            Container(
              height: 200,
              decoration: BoxDecoration(
                gradient: LinearGradient(
                  begin: Alignment.topCenter,
                  end: Alignment.bottomCenter,
                  colors: [
                    Colors.purple[800]!,
                    Colors.purple[400]!,
                  ],
                ),
              ),
              child: Center(
                child: Column(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: [
                    CircleAvatar(
                      radius: 50,
                      backgroundColor: Colors.purple[200],
                      backgroundImage: profilePhotoUrl.isNotEmpty
                          ? NetworkImage(profilePhotoUrl)
                          : null,
                      child: profilePhotoUrl.isEmpty
                          ? Icon(Icons.person, size: 50, color: Colors.white)
                          : null,
                    ),
                    SizedBox(height: 16),
                    Text(
                      "User Name",
                      style: TextStyle(
                        fontSize: 24,
                        fontWeight: FontWeight.bold,
                        color: Colors.white,
                      ),
                    ),
                    Text(
                      "Company: ${companyDomainController.text.isEmpty ? 'Not specified' : companyDomainController.text}",
                      style: TextStyle(
                        color: Colors.white70,
                      ),
                    ),
                  ],
                ),
              ),
            ),
            Padding(
              padding: EdgeInsets.all(16),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Text(
                    'About',
                    style: TextStyle(
                      fontSize: 20,
                      fontWeight: FontWeight.bold,
                      color: Colors.purple[800],
                    ),
                  ),
                  SizedBox(height: 8),
                  isEditing
                      ? TextField(
                          controller: bioController,
                          maxLines: 3,
                          decoration: InputDecoration(
                            border: OutlineInputBorder(),
                            focusedBorder: OutlineInputBorder(
                              borderSide: BorderSide(color: Colors.purple),
                            ),
                          ),
                        )
                      : Text(
                          bioController.text.isEmpty
                              ? "No bio yet."
                              : bioController.text,
                        ),
                  SizedBox(height: 24),
                  Text(
                    'Contact',
                    style: TextStyle(
                      fontSize: 20,
                      fontWeight: FontWeight.bold,
                      color: Colors.purple[800],
                    ),
                  ),
                  SizedBox(height: 8),
                  isEditing
                      ? Column(
                          children: [
                            TextField(
                              controller: socialMediaController,
                              decoration: InputDecoration(
                                labelText: 'Social Media Link',
                                labelStyle: TextStyle(color: Colors.purple),
                                focusedBorder: UnderlineInputBorder(
                                  borderSide: BorderSide(color: Colors.purple),
                                ),
                              ),
                            ),
                            TextField(
                              controller: companyDomainController,
                              decoration: InputDecoration(
                                labelText: 'Company Domain',
                                labelStyle: TextStyle(color: Colors.purple),
                                focusedBorder: UnderlineInputBorder(
                                  borderSide: BorderSide(color: Colors.purple),
                                ),
                              ),
                            ),
                            TextField(
                              onChanged: (value) => setState(() {
                                profilePhotoUrl = value;
                              }),
                              decoration: InputDecoration(
                                labelText: 'Profile Photo URL',
                                labelStyle: TextStyle(color: Colors.purple),
                                focusedBorder: UnderlineInputBorder(
                                  borderSide: BorderSide(color: Colors.purple),
                                ),
                              ),
                            ),
                          ],
                        )
                      : Column(
                          children: [
                            ListTile(
                              leading: Icon(Icons.link, color: Colors.purple),
                              title: Text(
                                socialMediaController.text.isEmpty
                                    ? "No social media link added"
                                    : socialMediaController.text,
                              ),
                            ),
                          ],
                        ),
                ],
              ),
            ),
          ],
        ),
      ),
      floatingActionButton: isEditing
          ? FloatingActionButton(
              onPressed: () {
                setState(() {
                  isEditing = false;
                });
              },
              child: Icon(Icons.check),
              backgroundColor: Colors.purple,
            )
          : null,
    );
  }
}

class HashtagPage extends StatelessWidget {
  final String hashtag;
  final List<Map<String, dynamic>> posts;

  HashtagPage({required this.hashtag, required this.posts});

  @override
  Widget build(BuildContext context) {
    List<Map<String, dynamic>> filteredPosts =
        posts.where((post) => post["content"].contains(hashtag)).toList();

    return Scaffold(
      backgroundColor: Colors.purple[50],
      appBar: AppBar(
        title: Text("Posts with $hashtag", style: TextStyle(color: Colors.purple[800])),
        backgroundColor: Colors.white,
        elevation: 0,
      ),
      body: ListView.builder(
        padding: EdgeInsets.all(16),
        itemCount: filteredPosts.length,
        itemBuilder: (context, index) {
          return Card(
            elevation: 4,
            margin: EdgeInsets.only(bottom: 16),
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(16),
            ),
            child: Padding(
              padding: EdgeInsets.all(16),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Row(
                    children: [
                      CircleAvatar(
                        radius: 20,
                        backgroundColor: Colors.purple[200],
                        child: Icon(Icons.person, color: Colors.white),
                      ),
                      SizedBox(width: 12),
                      Text(
                        filteredPosts[index]["username"],
                        style: TextStyle(
                          fontWeight: FontWeight.bold,
                          color: Colors.purple[800],
                        ),
                      ),
                    ],
                  ),
                  SizedBox(height: 12),
                  Text(filteredPosts[index]["content"]),
                  SizedBox(height: 12),
                  Row(
                    children: [
                      Icon(Icons.favorite, color: Colors.red),
                      SizedBox(width: 4),
                      Text("${filteredPosts[index]["likes"]}"),
                      SizedBox(width: 16),
                      Icon(Icons.comment, color: Colors.purple),
                      SizedBox(width: 4),
                      Text("${filteredPosts[index]["comments"].length}"),
                    ],
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}
