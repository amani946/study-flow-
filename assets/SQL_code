CREATE TABLE `Users` (
  `user_id` SERIAL PRIMARY KEY,
  `username` VARCHAR(50) UNIQUE NOT NULL,
  `email` VARCHAR(100) UNIQUE NOT NULL,
  `password_hash` VARCHAR(255) NOT NULL,
  `user_type` ENUM('student','company','admin') NOT NULL,
  `is_admin` BOOLEAN DEFAULT FALSE,
  `profile_photo_url` VARCHAR(255),
  `bio` TEXT,
  `social_media_link` VARCHAR(255),
  `country` VARCHAR(100),
  `university` VARCHAR(100),
  `major` VARCHAR(100),
  `company_name` VARCHAR(100),
  `domain_of_work` VARCHAR(100),
  `company_type` ENUM('private','government'),
  `commercial_register` VARCHAR(100),
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `last_login` TIMESTAMP,
  `is_verified` BOOLEAN DEFAULT FALSE,
  `is_active` BOOLEAN DEFAULT TRUE
);

CREATE TABLE `Posts` (
  `post_id` SERIAL PRIMARY KEY,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `content` TEXT NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `is_flagged` BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (`user_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);

CREATE TABLE `Comments` (
  `comment_id` SERIAL PRIMARY KEY,
  `post_id` BIGINT UNSIGNED NOT NULL,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `content` TEXT NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `is_flagged` BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (`post_id`) REFERENCES `Posts`(`post_id`) ON DELETE CASCADE,
  FOREIGN KEY (`user_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);

CREATE TABLE `Likes` (
  `like_id` SERIAL PRIMARY KEY,
  `post_id` BIGINT UNSIGNED NOT NULL,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE KEY `unique_like` (`post_id`, `user_id`),
  FOREIGN KEY (`post_id`) REFERENCES `Posts`(`post_id`) ON DELETE CASCADE,
  FOREIGN KEY (`user_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);

CREATE TABLE `SavedPosts` (
  `saved_post_id` SERIAL PRIMARY KEY,
  `post_id` BIGINT UNSIGNED NOT NULL,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  UNIQUE KEY `unique_save` (`post_id`, `user_id`),
  FOREIGN KEY (`post_id`) REFERENCES `Posts`(`post_id`) ON DELETE CASCADE,
  FOREIGN KEY (`user_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);

CREATE TABLE `ToDoLists` (
  `task_id` SERIAL PRIMARY KEY,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `task` TEXT NOT NULL,
  `is_completed` BOOLEAN DEFAULT FALSE,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `due_date` DATE,
  FOREIGN KEY (`user_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);

CREATE TABLE `ChatMessages` (
  `message_id` SERIAL PRIMARY KEY,
  `sender_id` BIGINT UNSIGNED NOT NULL,
  `receiver_id` BIGINT UNSIGNED NOT NULL,
  `message` TEXT NOT NULL,
  `sent_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `is_read` BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (`sender_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE,
  FOREIGN KEY (`receiver_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);

CREATE TABLE `Friends` (
  `friendship_id` SERIAL PRIMARY KEY,
  `user1_id` BIGINT UNSIGNED NOT NULL,
  `user2_id` BIGINT UNSIGNED NOT NULL,
  `status` ENUM('pending','accepted','blocked') DEFAULT 'pending',
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `action_user_id` BIGINT UNSIGNED NOT NULL,
  UNIQUE KEY `unique_friendship` (`user1_id`, `user2_id`),
  FOREIGN KEY (`user1_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE,
  FOREIGN KEY (`user2_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE,
  FOREIGN KEY (`action_user_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);

CREATE TABLE `Internships` (
  `internship_id` SERIAL PRIMARY KEY,
  `title` VARCHAR(100) NOT NULL,
  `description` TEXT NOT NULL,
  `required_skills` TEXT NOT NULL,
  `posted_by` BIGINT UNSIGNED NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `expiry_date` DATE,
  `is_active` BOOLEAN DEFAULT TRUE,
  FOREIGN KEY (`posted_by`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);

CREATE TABLE `Scholarships` (
  `scholarship_id` SERIAL PRIMARY KEY,
  `title` VARCHAR(100) NOT NULL,
  `description` TEXT NOT NULL,
  `eligibility_criteria` TEXT NOT NULL,
  `posted_by` BIGINT UNSIGNED NOT NULL,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `deadline` DATE,
  `is_active` BOOLEAN DEFAULT TRUE,
  FOREIGN KEY (`posted_by`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);

CREATE TABLE `Applications` (
  `application_id` SERIAL PRIMARY KEY,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `internship_id` BIGINT UNSIGNED,
  `scholarship_id` BIGINT UNSIGNED,
  `status` ENUM('pending','accepted','rejected','shortlisted') DEFAULT 'pending',
  `applied_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `updated_at` TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `message` TEXT,
  CHECK (`internship_id` IS NOT NULL OR `scholarship_id` IS NOT NULL),
  FOREIGN KEY (`user_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE,
  FOREIGN KEY (`internship_id`) REFERENCES `Internships`(`internship_id`) ON DELETE CASCADE,
  FOREIGN KEY (`scholarship_id`) REFERENCES `Scholarships`(`scholarship_id`) ON DELETE CASCADE
);

CREATE TABLE `AdminLogs` (
  `log_id` SERIAL PRIMARY KEY,
  `admin_id` BIGINT UNSIGNED NOT NULL,
  `action` VARCHAR(255) NOT NULL,
  `target_type` ENUM('user','post','comment','internship','scholarship','application'),
  `target_id` BIGINT UNSIGNED,
  `details` TEXT,
  `ip_address` VARCHAR(45),
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (`admin_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);

CREATE TABLE `Reports` (
  `report_id` SERIAL PRIMARY KEY,
  `reporter_id` BIGINT UNSIGNED NOT NULL,
  `target_type` ENUM('user','post','comment'),
  `target_id` BIGINT UNSIGNED NOT NULL,
  `reason` TEXT NOT NULL,
  `status` ENUM('pending','reviewed','resolved','dismissed') DEFAULT 'pending',
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  `resolved_by` BIGINT UNSIGNED,
  `resolved_at` TIMESTAMP,
  FOREIGN KEY (`reporter_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE,
  FOREIGN KEY (`resolved_by`) REFERENCES `Users`(`user_id`) ON DELETE SET NULL
);

CREATE TABLE `Notifications` (
  `notification_id` SERIAL PRIMARY KEY,
  `user_id` BIGINT UNSIGNED NOT NULL,
  `type` ENUM('friend_request','friend_accept','post_like','comment','message','application_update','admin_message'),
  `source_id` BIGINT UNSIGNED,
  `content` TEXT NOT NULL,
  `is_read` BOOLEAN DEFAULT FALSE,
  `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  FOREIGN KEY (`user_id`) REFERENCES `Users`(`user_id`) ON DELETE CASCADE
);
